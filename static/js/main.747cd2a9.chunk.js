(this["webpackJsonpyeast-calc"]=this["webpackJsonpyeast-calc"]||[]).push([[0],{16:function(e,a,t){e.exports=t(25)},21:function(e,a,t){},25:function(e,a,t){"use strict";t.r(a);var l=t(0),n=t.n(l),r=t(14),o=t.n(r);t(21),Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var c=t(11),s=t(7),m=t(27),i=t(5),u=t(6),d=t(8),E={fermVol:10,dillution:200,cellConc:1,densSlurry:1.1,numSquares:25},p=function(e,a){switch(a.type){case"FERMVOL":return Object(s.a)(Object(s.a)({},e),{},{fermVol:a.payload});case"GRAVITY":return Object(s.a)(Object(s.a)({},e),{},{gravity:a.payload});case"CELLCONC":return Object(s.a)(Object(s.a)({},e),{},{cellConc:a.payload});case"DENSSLURRY":return Object(s.a)(Object(s.a)({},e),{},{densSlurry:a.payload});case"NUMSQUARES":return Object(s.a)(Object(s.a)({},e),{},{numSquares:a.payload});case"DILLUTION":return Object(s.a)(Object(s.a)({},e),{},{dillution:a.payload});case"LIVECELLS":return Object(s.a)(Object(s.a)({},e),{},{liveCells:a.payload});case"DEADCELLS":return Object(s.a)(Object(s.a)({},e),{},{deadCells:a.payload});default:throw new Error("WTF OVER")}},C=function(e){return n.a.createElement(u.a,null,n.a.createElement(i.a,{className:"topRow"},e.title),n.a.createElement(i.a,{className:"output"},n.a.createElement(d.a.Control,{size:"sm",type:"text",readOnly:!0,placeholder:"-",value:(a=e.value,a>=0?a:"-")})));var a},y=function(){var e=Object(l.useReducer)(p,E),a=Object(c.a)(e,2),t=a[0],r=a[1],o=Object(l.useState)({}),y=Object(c.a)(o,2),N=y[0],h=y[1];return Object(l.useEffect)((function(){var e=t.liveCells+t.deadCells,a=(t.liveCells/e*100).toFixed(2),l=25/t.numSquares,n=31*t.fermVol*3785.41,r=e*l*t.dillution*Math.pow(10,4),o=t.cellConc*Math.pow(10,6),c=117180*t.fermVol*t.gravity*Math.pow(10,5),m=c/r,i=m/1e3,u=.264172*i,d=m/t.densSlurry,E=d/1e3,p=2.20462*E;h(Object(s.a)(Object(s.a)({},N),{},{viability:a,cellsCounted:e,cellsML:r.toExponential(2),fermGal:31*t.fermVol,fermML:n.toExponential(2),cellConcPerMLPerP:o.toExponential(2),cellConcML:(o*t.gravity).toExponential(2),totalCellsPitch:c.toExponential(2),volNeededML:m.toExponential(2),volNeededLiter:i.toFixed(2),volNeededGal:u.toFixed(2),massNeededGram:d.toExponential(2),massNeededKG:E.toFixed(2),massNeededLB:p.toFixed(2)}))}),[t]),n.a.createElement(m.a,{style:{marginTop:"30px"},id:"yeast-calc"},n.a.createElement(i.a,null,n.a.createElement(u.a,{className:"input"},"Yellow Cells are inputs"),n.a.createElement(u.a,{className:"output"},"Blue Cells are calculated")),n.a.createElement(i.a,null,n.a.createElement(u.a,{className:"leftAnchor-col"},n.a.createElement(i.a,{className:"topRow"},"Fermentation Volume (in BBL)"),n.a.createElement(i.a,{className:"input btmCol"},n.a.createElement(d.a.Control,{placeholder:t.fermVol,onChange:function(e){return r({type:"FERMVOL",payload:Number(e.target.value)})},size:"sm",type:"text"}))),n.a.createElement(u.a,null,"This is size of equipment"),n.a.createElement(C,{title:"Cell Count (Cells/ML)",value:N.cellsML}),n.a.createElement(C,{title:"Fermentation Volume (gal)",value:N.fermGal}),n.a.createElement(C,{title:"Fermentation Volume (mL)",value:N.fermML}),n.a.createElement(C,{title:"Desired Cell Concentration (Cells/mL-P)",value:N.cellConcPerMLPerP}),n.a.createElement(C,{title:"Desired Cell Concentration (Cells/mL)",value:N.cellConcML}),n.a.createElement(C,{title:"Total # Cells for Pitch",value:N.totalCellsPitch})),n.a.createElement(i.a,null,n.a.createElement(u.a,{className:"leftAnchor-col"},n.a.createElement(i.a,{className:"topRow"},"Desired Gravity"),n.a.createElement(i.a,{className:"input"},n.a.createElement(d.a.Control,{onChange:function(e){return r({type:"GRAVITY",payload:Number(e.target.value)})},size:"sm",type:"text"}))),n.a.createElement(u.a,null,"This is the expected gravity of the beer being pitched into"),n.a.createElement(C,{title:"Volume of Slurry Needed (mL)",value:N.volNeededML}),n.a.createElement(C,{title:"Volume of Slurry needed (L)",value:N.volNeededLiter}),n.a.createElement(C,{title:"Volume of Slurry Needed (Gal)",value:N.volNeededGal}),n.a.createElement(C,{title:"Mass of slurry Needed(g)",value:N.massNeededGram}),n.a.createElement(C,{title:"Mass of slurry needed (KG)",value:N.massNeededKG}),n.a.createElement(C,{title:"Mass of slurry needed (lb)",value:N.massNeededLB})),n.a.createElement(i.a,null,n.a.createElement(u.a,{className:"leftAnchor-col"},n.a.createElement(i.a,{className:"topRow"},"Desired Cell concentration (Cells/mL x 1E6)"),n.a.createElement(i.a,{className:"input"},n.a.createElement(d.a.Control,{placeholder:t.cellConc,onChange:function(e){return r({type:"CELLCONC",payload:Number(e.target.value)})},size:"sm",type:"text"}))),n.a.createElement(u.a,null,"This is the desired concentration of cells/mL"),n.a.createElement(u.a,{className:"leftAnchor-col",md:9},n.a.createElement(i.a,{className:"topRow"}),n.a.createElement(i.a,{style:{display:"inline"}},"Hemocytometer cell count"))),n.a.createElement(i.a,null,n.a.createElement(u.a,{className:"leftAnchor-col"},n.a.createElement(i.a,{className:"topRow"},"Density of Slurry (g/mL)"),n.a.createElement(i.a,{className:"input"},n.a.createElement(d.a.Control,{placeholder:t.densSlurry,onChange:function(e){return r({type:"DENSSLURRY",payload:Number(e.target.value)})},size:"sm",type:"text"}))),n.a.createElement(u.a,null,n.a.createElement(i.a,null,"This is the density of the slury being pitched. This can be measured of if unknown go with 1.1g/mL")),n.a.createElement(C,{title:"Total Cells Counted",value:N.cellsCounted}),n.a.createElement(u.a,null,n.a.createElement(i.a,{className:"topRow"},"# of Squares Counted"),n.a.createElement(i.a,{className:"input"},n.a.createElement(d.a.Control,{placeholder:t.numSquares,onChange:function(e){return r({type:"NUMSQUARES",payload:Number(e.target.value)})},size:"sm",type:"text"}))),n.a.createElement(u.a,null,n.a.createElement(i.a,{className:"topRow"},"Dilution"),n.a.createElement(i.a,{className:"input"},n.a.createElement(d.a.Control,{placeholder:t.dillution,onChange:function(e){return r({type:"DILLUTION",payload:Number(e.target.value)})},size:"sm",type:"text"}))),n.a.createElement(u.a,null,n.a.createElement(i.a,{className:"topRow"},"Live Cells Counted"),n.a.createElement(i.a,{className:"input"},n.a.createElement(d.a.Control,{placeholder:t.liveCells,onChange:function(e){return r({type:"LIVECELLS",payload:Number(e.target.value)})},size:"sm",type:"text"}))),n.a.createElement(u.a,null,n.a.createElement(i.a,{className:"topRow"},"Dead Cells Counted"),n.a.createElement(i.a,{className:"input"},n.a.createElement(d.a.Control,{placeholder:t.deadCells,onChange:function(e){return r({type:"DEADCELLS",payload:Number(e.target.value)})},size:"sm",type:"text"}))),n.a.createElement(C,{title:"% Viability (Do not pitch under 90%)",value:N.viability})))};o.a.render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(y,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[16,1,2]]]);
//# sourceMappingURL=main.747cd2a9.chunk.js.map